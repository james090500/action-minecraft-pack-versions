name: 'Minecraft pack-format updater'
description: 'Creates/updates a JSON map of Minecraft versions to datapack/resource-pack formats'
author: 'Meza'
branding:
  icon: 'database'
  color: 'green'

inputs:
  output_path:
    description: 'Relative path (from repo root) to write the JSON file'
    default: 'formats.json'
  concurrency:
    description: 'Number of parallel downloads (0 = auto)'
    default: '0'
    required: false
  cutoff_version:
    description: 'Minimum Minecraft version to include in the JSON file (e.g. 1.20.2)'
    default: '18w47b'
    required: false
  commit_enabled:
    description: 'Create a commit and PR when new versions are added'
    default: 'false'
  commit_type:
    description: 'Conventional-commit type (feat / fix / chore …)'
    default: 'chore'
  commit_scope:
    description: 'Optional scope (e.g. pack-format)'
    default: ''
  commit_template:
    description: 'Mustache template – {{versions}} will be replaced'
    default: '{{type}}{{#scope}}({{scope}}){{/scope}}: update pack-format map for {{versions}}'
  pr_branch:
    description: 'Branch to push the change to'
    default: 'bot/pack-format'
  pr_base:
    description: 'Target branch for the PR'
    default: 'main'
  auto_merge:
    description: 'Enable PR auto-merge (true/false)'
    default: 'true'
  github_token:
    description: 'PAT / GITHUB_TOKEN (defaults to workflow token)'
    default: '${{ github.token }}'

runs:
  using: 'composite'
  steps:
    # 1. Set up Node + pnpm
    - uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'pnpm'
    - uses: pnpm/action-setup@v2
      with:
        version: 9
        run_install: true   # installs deps via pnpm

    # 2. Execute the updater
    - name: Build & run updater
      shell: bash
      id: fetcher
      run: |
        pnpm exec tsc
        node dist/index.js

outputs:
  path:
    description: 'Path of the generated JSON file'
    value: ${{ steps.fetcher.outputs.path }}
  new_versions:
    description: 'Comma-separated list of new versions added to the JSON file'
    value: ${{ steps.fetcher.outputs.new_versions }}
  did_update:
    description: 'Did the updater modify the JSON file?'
    value: ${{ steps.fetcher.outputs.did_update }}
